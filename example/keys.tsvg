<svg id="kb-svg-horiz" class="kb-bottom" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0" y="0" width="1100" height="694" viewBox="0 0 1100 694">
  <defs>
    <g id="up-tri">
      <path style="fill: #ddd; stroke: #999; stroke-width: 2px" d="M 0,173.2 l 100,0 l -100,-173.2 l -100,173.2 z"/>
    </g>
    <g id="down-tri">
      <path style="fill: #ddd; stroke: #999; stroke-width: 2px" d="M 0,173.2 l 100,-173.2 l -200,0 z"/>
    </g>
    <g id="down-tri-2">
      <path style="fill: #fff; stroke: #444; stroke-width: 3px" d="M 0,173.2 l 100,-173.2 l -200,0 z"/>
    </g>
  </defs>
  <rect x="0" y="0" width="1100" height="694" fill="#eee"/>

  @beadgcf = "B E A D G C F".split(' ');
  @myzip = (ch) => @beadgcf.map(x => x + @unescapeSharpsFlatsNats(ch));
  @hyphens = "- - - - - - -".split(' ');
  @texts = @flatten([@hyphens, @myzip('\\#\\#'), @myzip('\\#'), @myzip(''), @myzip('\\b'), @myzip('\\b\\b'), @hyphens]);
  @bgtextstyle = @makeStyle({'fill': '#999', 'font-family': "'Helevtica Neue', Arial, sans-serif", 'font-size': '55px'});
  <!-- this is sort of the only argument ... could be appended by other program to generate multiple .svg files, then .png, etc.
       from -10 (10 sharps) to 10 (10 flats), 0 = key of C (no sharps or flats) -->
  @keyIndex = 0;
  <For from="0" upTo="6">
    {i => <use xlink:href="#up-tri" transform={@translate(i*200+100, 173.2*0)}/>}
    {i => <use xlink:href="#up-tri" transform={@translate(i*200, 173.2*1)}/>}
    {i => <use xlink:href="#up-tri" transform={@translate(i*200+100, 173.2*2)}/>}
    {i => <use xlink:href="#up-tri" transform={@translate(i*200, 173.2*3)}/>}

    {i => <use xlink:href="#down-tri" transform={@translate(i*200, 173.2*0)}/>}
    {i => <use xlink:href="#down-tri" transform={@translate(i*200+100, 173.2*1)}/>}
    {i => <use xlink:href="#down-tri" transform={@translate(i*200, 173.2*2)}/>}
    {i => <use xlink:href="#down-tri" transform={@translate(i*200+100, 173.2*3)}/>}

    {i => <text x={200*i +   0} y={80+172.3*0} text-anchor="middle" style={@bgtextstyle}>{@texts[i + @keyIndex + 16 +  0].toLowerCase()}</text>}
    {i => <text x={200*i + 100} y={80+172.3*1} text-anchor="middle" style={@bgtextstyle}>{@texts[i + @keyIndex + 16 +  4].toLowerCase()}</text>}
    {i => <text x={200*i +   0} y={80+172.3*2} text-anchor="middle" style={@bgtextstyle}>{@texts[i + @keyIndex + 16 +  7].toLowerCase()}</text>}
    {i => <text x={200*i + 100} y={80+172.3*3} text-anchor="middle" style={@bgtextstyle}>{@texts[i + @keyIndex + 16 + 11].toLowerCase()}</text>}

    {i => <text x={200*i + 100} y={133+172.3*0} text-anchor="middle" style={@bgtextstyle}>{@texts[i + @keyIndex + 20 +  0]}</text>}
    {i => <text x={200*i +   0} y={133+172.3*1} text-anchor="middle" style={@bgtextstyle}>{@texts[i + @keyIndex + 20 +  3]}</text>}
    {i => <text x={200*i + 100} y={133+172.3*2} text-anchor="middle" style={@bgtextstyle}>{@texts[i + @keyIndex + 20 +  7]}</text>}
    {i => <text x={200*i +   0} y={133+172.3*3} text-anchor="middle" style={@bgtextstyle}>{@texts[i + @keyIndex + 20 +  10]}</text>}

  </For>

  <!-- use xlink:href='#down-tri-2' transform={@translate(1*200, 173.2*0)}/ -->


</svg>
